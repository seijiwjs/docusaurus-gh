"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[687],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),s=p(n),h=r,m=s["".concat(o,".").concat(h)]||s[h]||k[h]||l;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4260:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],d={id:"SceneTree_BinReader.BinReader",title:"Class: BinReader",sidebar_label:"BinReader",custom_edit_url:null},o=void 0,p={unversionedId:"API/SceneTree/SceneTree_BinReader.BinReader",id:"API/SceneTree/SceneTree_BinReader.BinReader",isDocsHomePage:!1,title:"Class: BinReader",description:"Reads binary data in a specific encoding. Used in loading binary data such as zcad files.",source:"@site/docs/API/SceneTree/BinReader.md",sourceDirName:"API/SceneTree",slug:"/API/SceneTree/SceneTree_BinReader.BinReader",permalink:"/zea-engine/API/SceneTree/SceneTree_BinReader.BinReader",editUrl:null,tags:[],version:"current",frontMatter:{id:"SceneTree_BinReader.BinReader",title:"Class: BinReader",sidebar_label:"BinReader",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"BillboardItem",permalink:"/zea-engine/API/SceneTree/SceneTree_BillboardItem.BillboardItem"},next:{title:"BinWriter",permalink:"/zea-engine/API/SceneTree/SceneTree_BinWriter.BinWriter"}},u=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties",children:[{value:"__byteOffset",id:"__byteoffset",children:[]},{value:"__data",id:"__data",children:[]},{value:"__dataView",id:"__dataview",children:[]},{value:"__isMobileDevice",id:"__ismobiledevice",children:[]},{value:"utf8decoder",id:"utf8decoder",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"byteLength",id:"bytelength",children:[]},{value:"data",id:"data",children:[]},{value:"isMobileDevice",id:"ismobiledevice",children:[]},{value:"remainingByteLength",id:"remainingbytelength",children:[]}]},{value:"Methods",id:"methods",children:[{value:"advance",id:"advance",children:[]},{value:"loadBox2",id:"loadbox2",children:[]},{value:"loadBox3",id:"loadbox3",children:[]},{value:"loadFloat16",id:"loadfloat16",children:[]},{value:"loadFloat16From2xUInt8",id:"loadfloat16from2xuint8",children:[]},{value:"loadFloat16Quat",id:"loadfloat16quat",children:[]},{value:"loadFloat16Vec2",id:"loadfloat16vec2",children:[]},{value:"loadFloat16Vec3",id:"loadfloat16vec3",children:[]},{value:"loadFloat32",id:"loadfloat32",children:[]},{value:"loadFloat32Array",id:"loadfloat32array",children:[]},{value:"loadFloat32Quat",id:"loadfloat32quat",children:[]},{value:"loadFloat32Vec2",id:"loadfloat32vec2",children:[]},{value:"loadFloat32Vec3",id:"loadfloat32vec3",children:[]},{value:"loadRGBAFloat32Color",id:"loadrgbafloat32color",children:[]},{value:"loadRGBAUInt8Color",id:"loadrgbauint8color",children:[]},{value:"loadRGBFloat32Color",id:"loadrgbfloat32color",children:[]},{value:"loadRGBUInt8Color",id:"loadrgbuint8color",children:[]},{value:"loadSInt32",id:"loadsint32",children:[]},{value:"loadSInt32From2xFloat16",id:"loadsint32from2xfloat16",children:[]},{value:"loadSInt32Vec2",id:"loadsint32vec2",children:[]},{value:"loadStr",id:"loadstr",children:[]},{value:"loadStrArray",id:"loadstrarray",children:[]},{value:"loadUFloat16",id:"loadufloat16",children:[]},{value:"loadUInt16",id:"loaduint16",children:[]},{value:"loadUInt16Array",id:"loaduint16array",children:[]},{value:"loadUInt32",id:"loaduint32",children:[]},{value:"loadUInt32Array",id:"loaduint32array",children:[]},{value:"loadUInt32From2xUFloat16",id:"loaduint32from2xufloat16",children:[]},{value:"loadUInt32Vec2",id:"loaduint32vec2",children:[]},{value:"loadUInt8",id:"loaduint8",children:[]},{value:"loadUInt8Array",id:"loaduint8array",children:[]},{value:"pos",id:"pos",children:[]},{value:"readPad",id:"readpad",children:[]},{value:"seek",id:"seek",children:[]}]}],k={toc:u};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Reads binary data in a specific encoding. Used in loading binary data such as zcad files."),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new BinReader"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"byteOffset?"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"isMobileDevice?"),")"),(0,l.kt)("p",null,"Create a bin reader."),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"data")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"ArrayBuffer")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The data buffer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"byteOffset")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"0")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The byte offset value to start reading the buffer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"isMobileDevice")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The isMobileDevice value.")))),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L21"},"SceneTree/BinReader.ts:21")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"__byteoffset"},"_","_","byteOffset"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,l.kt)("strong",{parentName:"p"},"_","_","byteOffset"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L10"},"SceneTree/BinReader.ts:10")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"__data"},"_","_","data"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,l.kt)("strong",{parentName:"p"},"_","_","data"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L9"},"SceneTree/BinReader.ts:9")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"__dataview"},"_","_","dataView"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,l.kt)("strong",{parentName:"p"},"_","_","dataView"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"DataView")),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L11"},"SceneTree/BinReader.ts:11")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"__ismobiledevice"},"_","_","isMobileDevice"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,l.kt)("strong",{parentName:"p"},"_","_","isMobileDevice"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L12"},"SceneTree/BinReader.ts:12")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"utf8decoder"},"utf8decoder"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,l.kt)("strong",{parentName:"p"},"utf8decoder"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"TextDecoder")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L13"},"SceneTree/BinReader.ts:13")),(0,l.kt)("h2",{id:"accessors"},"Accessors"),(0,l.kt)("h3",{id:"bytelength"},"byteLength"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," ",(0,l.kt)("strong",{parentName:"p"},"byteLength"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the length of the buffer."),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The total length of the buffer")),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L52"},"SceneTree/BinReader.ts:52")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"data"},"data"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," ",(0,l.kt)("strong",{parentName:"p"},"data"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")),(0,l.kt)("p",null,"Returns the data buffer we're reading from."),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The data buffer we are reading from,")),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L43"},"SceneTree/BinReader.ts:43")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"ismobiledevice"},"isMobileDevice"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," ",(0,l.kt)("strong",{parentName:"p"},"isMobileDevice"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Returns state of whether or not the ",(0,l.kt)("inlineCode",{parentName:"p"},"BinReader")," object was instantiated from a mobile device."),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns true is a mobile device is detected.")),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L34"},"SceneTree/BinReader.ts:34")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"remainingbytelength"},"remainingByteLength"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," ",(0,l.kt)("strong",{parentName:"p"},"remainingByteLength"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns remaining length of the buffer to read."),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The remaining length of the buffer to read.")),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L61"},"SceneTree/BinReader.ts:61")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"advance"},"advance"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"advance"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"byteOffset"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Adds offset bytes to current offset value."),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"byteOffset")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The byte Offset amount.")))),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L86"},"SceneTree/BinReader.ts:86")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadbox2"},"loadBox2"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadBox2"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Box2.Box2"},(0,l.kt)("inlineCode",{parentName:"a"},"Box2"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Box2")," object with the next four Float32 values in the buffer.\nNext four because it creates two Vec2."),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Box2.Box2"},(0,l.kt)("inlineCode",{parentName:"a"},"Box2"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Box2.")),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L480"},"SceneTree/BinReader.ts:480")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadbox3"},"loadBox3"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadBox3"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Box3.Box3"},(0,l.kt)("inlineCode",{parentName:"a"},"Box3"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Box2")," object with the next six Float32 values in the buffer.\nNext four because it creates two Vec3."),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Box3.Box3"},(0,l.kt)("inlineCode",{parentName:"a"},"Box3"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Box3.")),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L490"},"SceneTree/BinReader.ts:490")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat16"},"loadFloat16"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat16"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the Float16 value at current byte offset position,\nand adds four bytes to the offset."),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L144"},"SceneTree/BinReader.ts:144")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat16from2xuint8"},"loadFloat16From2xUInt8"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat16From2xUInt8"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Returns a single signed Float16 value at current byte offset position from 2 unsigned Int8 values,\nand adds two bytes to the offset."),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L170"},"SceneTree/BinReader.ts:170")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat16quat"},"loadFloat16Quat"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat16Quat"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Quat.Quat"},(0,l.kt)("inlineCode",{parentName:"a"},"Quat"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Quat")," object with the next four Float16 values in the buffer."),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Quat.Quat"},(0,l.kt)("inlineCode",{parentName:"a"},"Quat"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Quat.")),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L407"},"SceneTree/BinReader.ts:407")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat16vec2"},"loadFloat16Vec2"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat16Vec2"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec2")," object with the next two Float16 values in the buffer."),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec2.")),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L362"},"SceneTree/BinReader.ts:362")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat16vec3"},"loadFloat16Vec3"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat16Vec3"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec3.Vec3"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec3"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec3")," object with the next three Float16 values in the buffer."),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec3.Vec3"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec3"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec3.")),(0,l.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L383"},"SceneTree/BinReader.ts:383")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat32"},"loadFloat32"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat32"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the Float32 value at current byte offset position,\nand adds four bytes to the offset."),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L205"},"SceneTree/BinReader.ts:205")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat32array"},"loadFloat32Array"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat32Array"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"size?"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"clone?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Float32Array")),(0,l.kt)("p",null,"Reads buffer and return a Float32 array with the specified size,\nstarting from current byte offset.\nByte offset is increased by the specified byte size x 4."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"size?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size param.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"clone")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The clone param.")))),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Float32Array")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L290"},"SceneTree/BinReader.ts:290")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat32quat"},"loadFloat32Quat"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat32Quat"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Quat.Quat"},(0,l.kt)("inlineCode",{parentName:"a"},"Quat"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Quat")," object with the next four Float32 values in the buffer."),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Quat.Quat"},(0,l.kt)("inlineCode",{parentName:"a"},"Quat"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Quat.")),(0,l.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L419"},"SceneTree/BinReader.ts:419")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat32vec2"},"loadFloat32Vec2"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat32Vec2"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec2")," object with the next two Float32 values in the buffer."),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec2.")),(0,l.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L372"},"SceneTree/BinReader.ts:372")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadfloat32vec3"},"loadFloat32Vec3"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadFloat32Vec3"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec3.Vec3"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec3"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec3")," object with the next three Float32 values in the buffer."),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec3.Vec3"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec3"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec3.")),(0,l.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L395"},"SceneTree/BinReader.ts:395")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadrgbafloat32color"},"loadRGBAFloat32Color"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadRGBAFloat32Color"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("p",null,"Creates and returns a RGBA ",(0,l.kt)("inlineCode",{parentName:"p"},"Color")," object with the next four Float32 values in the buffer."),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Color.")),(0,l.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L443"},"SceneTree/BinReader.ts:443")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadrgbauint8color"},"loadRGBAUInt8Color"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadRGBAUInt8Color"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("p",null,"Creates and returns a RGBA ",(0,l.kt)("inlineCode",{parentName:"p"},"Color")," object with the next four unsigned Int8 values in the buffer."),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Color.")),(0,l.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L466"},"SceneTree/BinReader.ts:466")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadrgbfloat32color"},"loadRGBFloat32Color"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadRGBFloat32Color"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Color")," object with the next three Float32 values in the buffer."),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Color.")),(0,l.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L432"},"SceneTree/BinReader.ts:432")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadrgbuint8color"},"loadRGBUInt8Color"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadRGBUInt8Color"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Color")," object with the next three unsigned Int8 values in the buffer."),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Color.Color"},(0,l.kt)("inlineCode",{parentName:"a"},"Color"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Color.")),(0,l.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L455"},"SceneTree/BinReader.ts:455")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadsint32"},"loadSInt32"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadSInt32"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the signed Int32 value at current byte offset position,\nand adds four bytes to the offset."),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L132"},"SceneTree/BinReader.ts:132")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadsint32from2xfloat16"},"loadSInt32From2xFloat16"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadSInt32From2xFloat16"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Loads and returns a single Signed integer value from 2 signed Float16 values."),(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L193"},"SceneTree/BinReader.ts:193")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadsint32vec2"},"loadSInt32Vec2"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadSInt32Vec2"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec2")," object with the next two signed Int32 values in the buffer."),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec2.")),(0,l.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L341"},"SceneTree/BinReader.ts:341")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadstr"},"loadStr"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadStr"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Returns next string.\nFirst looks for the string length description in the next four bytes in the buffer(Starting from byte offset)."),(0,l.kt)("h4",{id:"returns-24"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L314"},"SceneTree/BinReader.ts:314")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadstrarray"},"loadStrArray"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadStrArray"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"Returns an array of strings.\nFirst reading the size of the array then reading each string."),(0,l.kt)("h4",{id:"returns-25"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L327"},"SceneTree/BinReader.ts:327")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loadufloat16"},"loadUFloat16"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUFloat16"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the Float16 value at current byte offset position,\nand adds two bytes to the offset."),(0,l.kt)("h4",{id:"returns-26"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L155"},"SceneTree/BinReader.ts:155")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint16"},"loadUInt16"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt16"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the unsigned Uint16 value at current byte offset position,\nand adds two bytes to the offset."),(0,l.kt)("h4",{id:"returns-27"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L108"},"SceneTree/BinReader.ts:108")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint16array"},"loadUInt16Array"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt16Array"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"size?"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"clone?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Uint16Array")),(0,l.kt)("p",null,"Reads buffer and return an unsigned Int16 array with the specified size,\nstarting from current byte offset.\nByte offset is increased by the specified byte size x 2."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"size?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size param.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"clone")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The clone param.")))),(0,l.kt)("h4",{id:"returns-28"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Uint16Array")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L236"},"SceneTree/BinReader.ts:236")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint32"},"loadUInt32"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt32"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the unsigned Uint32 value at current byte offset position,\nand adds four bytes to the offset."),(0,l.kt)("h4",{id:"returns-29"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L120"},"SceneTree/BinReader.ts:120")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint32array"},"loadUInt32Array"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt32Array"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"size?"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"clone?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Uint32Array")),(0,l.kt)("p",null,"Reads buffer and return an unsigned Int32 array with the specified size,\nstarting from current byte offset.\nByte offset is increased by the specified byte size x 4."),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"size?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size param.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"clone")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The clone param.")))),(0,l.kt)("h4",{id:"returns-30"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Uint32Array")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L263"},"SceneTree/BinReader.ts:263")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint32from2xufloat16"},"loadUInt32From2xUFloat16"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt32From2xUFloat16"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Loads and returns a single Signed integer value from 2 Unsigned Float16 values."),(0,l.kt)("h4",{id:"returns-31"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L183"},"SceneTree/BinReader.ts:183")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint32vec2"},"loadUInt32Vec2"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt32Vec2"),"(): ",(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("p",null,"Creates and returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"Vec2")," object with the next two unsigned Int32 values in the buffer."),(0,l.kt)("h4",{id:"returns-32"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"../Math/Math_Vec2.Vec2"},(0,l.kt)("inlineCode",{parentName:"a"},"Vec2"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Returns a Vec2.")),(0,l.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L351"},"SceneTree/BinReader.ts:351")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint8"},"loadUInt8"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt8"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns the unsigned Uint8 value at current byte offset position,\nand adds one byte to the offset."),(0,l.kt)("h4",{id:"returns-33"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L96"},"SceneTree/BinReader.ts:96")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"loaduint8array"},"loadUInt8Array"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"loadUInt8Array"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"size?"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"clone?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"Uint8Array")),(0,l.kt)("p",null,"Reads buffer and return an unsigned Int8 array with the specified size,\nstarting from current byte offset.\nByte offset is increased by the specified byte size."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"size?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"undefined")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The size param.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"clone")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The clone param.")))),(0,l.kt)("h4",{id:"returns-34"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Uint8Array")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The return value.")),(0,l.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L220"},"SceneTree/BinReader.ts:220")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"pos"},"pos"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"pos"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Returns current byte offset in the buffer."),(0,l.kt)("h4",{id:"returns-35"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The current offset in the binary buffer")),(0,l.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L69"},"SceneTree/BinReader.ts:69")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"readpad"},"readPad"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readPad"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"stride"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Given a stridee value, advance the pointer to the end of the current stride."),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"stride")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The stride param.")))),(0,l.kt)("h4",{id:"returns-36"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L498"},"SceneTree/BinReader.ts:498")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"seek"},"seek"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"seek"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"byteOffset"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Sets the byte offset value."),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"byteOffset")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The byteOffset param.")))),(0,l.kt)("h4",{id:"returns-37"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-43"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeaInc/zea-engine/blob/41278600/src/SceneTree/BinReader.ts#L77"},"SceneTree/BinReader.ts:77")))}s.isMDXComponent=!0}}]);